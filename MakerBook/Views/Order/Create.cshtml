@using MakerBook.Enum
@model MakerBook.ViewModels.OrderViewModel

@{
    ViewData["Title"] = "Create";
}


<div class="about-heading-content">
    <div class="row">
        <div class="col-xl-9 col-lg-10 mx-auto">
            <div class="bg-faded rounded p-5">
                <h2 class="section-heading mb-4">
                    <span class="section-heading-upper">New</span>
                    <span class="section-heading-lower">Order</span>
                </h2>
                <hr />

                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="CategoryId" class="control-label"></label>
                        @Html.DropDownListFor(model=>model.CategoryId, Model.CategoryList, "--Select", new{@class="form-control", @id="CategoryId"})
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ServiceId" class="control-label"></label>
                        @Html.DropDownListFor(model=>model.ServiceId, Model.ServiceList, "--Select", new{@class="form-control", @id="ServiceId"})
                        <span asp-validation-for="ServiceId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ProfessionalId" class="control-label"></label>
                        @Html.DropDownListFor(model=>model.ProfessionalId, Model.ProfessionalList, "--Select", new{@class="form-control", @id="ProfessionalId"})

                        <input type="hidden" asp-for="ProfessionalId" />
                        <span asp-validation-for="ProfessionalId" class="text-danger"></span>
                    </div>



                    <div class="form-group">
                        <label asp-for="Date" class="control-label"></label>
                        <input asp-for="Date" class="form-control" />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="PaymentType" class="control-label"></label>

                        <select asp-for="PaymentType" class="form-control">
                            <option value="@PaymentTypeEnum.Cash">Cash</option>
                            <option value="@PaymentTypeEnum.Debit">Debit</option>
                            <option value="@PaymentTypeEnum.Credit">Credit</option>
                        </select>
                        <span asp-validation-for="PaymentType" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" /> |
                        <a class="btn btn-secondary btn-block" asp-action="Index">Back to List</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
@*<script type="text/javascript">  
    $(document).ready(function () { 
        alert("entrou");
        //Dropdownlist Selectedchange event  
        //$("#CategoryId").change(function () {  
           
        //    $("#ServiceId").empty();  
        //    $.ajax({  
        //        type: 'POST',  
        //        url: '@Url.Action("GetServicelist")', // we are calling json method  
   
        //        dataType: 'json',  
   
        //        data: { idCategory: $("#CategoryId").val() },   
             
   
        //        success: function (states) {  
        //            // states contains the JSON formatted list  
        //            // of states passed from the controller  
   
        //            $.each(states, function (i, state) {  
        //            $("ServiceId").append('<option value="' + state.Value + '">' +    
        //                 state.Text + '</option>');                                                                                                  
        //            // here we are adding option for States  
   
        //            });  
        //        },  
        //        error: function (ex) {  
        //            alert('Failed to retrieve states.' + ex);  
        //        }  
        //    });  
        //    return false;  
        //})  
    });  

</script>*@  
<script type="text/javascript">  
    $(document).ready(function () {  
        $('#CategoryId').change(function () {  
            $.ajax({  
                type: "post",  
                url: "/Order/GetServicelist",  
                data: { idCategory: $('#CategoryId').val() },  
                datatype: "json",  
                traditional: true,  
                success: function (data) {  
                    console.log(data);
                      if (data.length > 0) {
                          alert(data.length);
                                $('#ServiceId').empty();
                                $('#ServiceId').append($("<option></option>").val("0").html("--Select--"));
                                $.each(data, function () {
                                   $('#ServiceId').append($("<option></option>").val(this.value).html(this.text));
                                });
                            //    $('#ServiceId').prop("disabled", false);;
                            //    break;
                            } else {
                                $('#ServiceId').empty();
                                $('#ServiceId').append($("<option></option>").val("0").html("--Select--"));
                            //    $('#ServiceId').attr("disabled", "disabled");
                            }  
                } ,
                error: function (ex) {  
                     console.log(ex);
                    alert('Failed to retrieve states1.' + ex);  
                } 
                ,failure: function (response) {
                        alert(response.responseText);
                    },

            });  
        });  
    });  
</script> 
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }

@using MakerBook.ViewModels
@model ProfessionalProfileViewModel

@{
    ViewData["Title"] = "Professional Profile";
}


<div class="about-heading-content">
    <div class="row">
        <div class="col-xl-9 col-lg-10 mx-auto">
            <div class="bg-faded rounded p-5">
                <h2 class="section-heading mb-4">
                    <span class="section-heading-upper">Profile</span>
                    <span class="section-heading-lower">Professional</span>
                </h2>
                <hr />


                <form asp-action="ProfessionalProfile" enctype="multipart/form-data" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="ProfessionalId" />





                    <div class="card">
                        <div class="rounded-top text-white d-flex flex-row" style="background-color: #000; height:200px;">
                            <div class="ms-4 mt-5 d-flex flex-column" style="width: 150px;">
                                <img src="data:image;base64,@System.Convert.ToBase64String(Model.ImageProfile)"
                                     alt="Generic placeholder image" class="img-fluid img-thumbnail mt-4 mb-2"
                                     style="width: 150px; z-index: 1">

                            </div>
                            <div class="ms-3" style="margin-top: 130px;">
                                <p> @Html.DisplayFor(model => model.Professional.Name)</p>

                            </div>
                        </div>
                        <div class="p-4 text-black" style="background-color: #f8f9fa;">
                            <div class="d-flex justify-content-end text-center py-1">
                                <div>
                                    @foreach (var item in Model.professionalSocialMediaList)
                                    {
                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Facebook)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-facebook-f"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Twitter)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-twitter"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Google)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-google"></i>
                                            </a>
                                        }


                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Instagram)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-instagram"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Linkedin)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-linkedin-in"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Pinterest)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-pinterest"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Youtube)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-youtube"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Slack)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-slack-hash"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Github)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-github"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Reddit)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-reddit-alien"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Whatsapp)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-whatsapp"></i>
                                            </a>
                                        }

                                        if (item.ProfessionalProfileType == MakerBook.Enum.ProfessionalProfileTypeEnum.Skype)
                                        {
                                            <a class="btn btn-primary btn-lg btn-floating"
                                       href="@item.SocialMedia"
                                       role="button">
                                                <i class="fab fa-skype"></i>
                                            </a>
                                        }

                                    }

                                </div>
                            </div>
                            <div class="card-body p-4 text-black">
                                <div class="mb-5">
                                    <p class="lead fw-normal mb-1">About</p>
                                    <div class="p-4" style="background-color: #f8f9fa;">
                                        <p class="font-italic mb-1"> @Html.DisplayFor(model => model.Description)</p>

                                    </div>
                                </div>
                            </div>
                            <div id="carouselExampleControls" class="carousel" data-bs-ride="carousel">
                                <div class="carousel-inner">
                                    @{
                                        int i = 0;
                                    }
                                    @foreach (var item in Model.professionalServiceCardViewList)
                                    {
                                        i++;
                                        var active = i == 1 ? "active" : "";
                                        <div class="carousel-item @active">
                                            <div class="card">
                                                <div class="img-wrapper">
                                                    <img src="data:image;base64,@System.Convert.ToBase64String(item.ImageProfile)" class="d-block w-100" alt="">
                                                </div>
                                                <div class="card-body">
                                                    <h5 class="card-title">@item.ServiceTitle</h5>
                                                    <p class="card-text">@item.ServiceDescription</p>
                                                    <a class="btn btn-primary" asp-action="Details" asp-controller="Service" asp-route-id="@item.ServiceId">Details</a> 
                                                </div>
                                            </div>
                                        </div>
                                    }

                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>



                </form>

            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
      var multipleCardCarousel = document.querySelector(
      "#carouselExampleControls"
    );
    if (window.matchMedia("(min-width: 768px)").matches) {
      var carousel = new bootstrap.Carousel(multipleCardCarousel, {
        interval: false,
      });
      var carouselWidth = $(".carousel-inner")[0].scrollWidth;
      var cardWidth = $(".carousel-item").width();
      var scrollPosition = 0;
      $("#carouselExampleControls .carousel-control-next").on("click", function () {
        if (scrollPosition < carouselWidth - cardWidth * 4) {
          scrollPosition += cardWidth;
          $("#carouselExampleControls .carousel-inner").animate(
            { scrollLeft: scrollPosition },
            600
          );
        }
      });
      $("#carouselExampleControls .carousel-control-prev").on("click", function () {
        if (scrollPosition > 0) {
          scrollPosition -= cardWidth;
          $("#carouselExampleControls .carousel-inner").animate(
            { scrollLeft: scrollPosition },
            600
          );
        }
      });
    } else {
      $(multipleCardCarousel).addClass("slide");
    }
</script>
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
